 MYPORT FOLIO


<!doctypehtml>
<htmllang="en">
<head>
  <metacharset="utf-8">
  <title>PersonalPortfoliAngular</title>
  <basehref="/">
  <metaname="viewport"content="width=device-width, initial-scale=1">
 
  <linkhref="https://fonts.googleapis.com/css?family=Montserrat:400,700,200"rel="stylesheet" />
  <linkhref="https://use.fontawesome.com/releases/v5.0.6/css/all.css"rel="stylesheet">
  <linkhref="https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css"rel="stylesheet">
  <linkhref="assets/css/aos.css"rel="stylesheet">
  <linkhref="assets/css/bootstrap.min.css"rel="stylesheet">
  <linkhref="assets/css/main.css"rel="stylesheet">
  <linkrel="icon"type="image/x-icon"href="favicon.ico">
</head>
<body>
  <app-root></app-root>
  <scriptsrc="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <scriptsrc="assets/js/core/popper.min.js"></script>
  <scriptsrc="assets/js/core/bootstrap.min.js"></script>
  <scriptsrc="assets/js/now-ui-kit.js?v=1.3.0"></script>
  <scriptsrc="assets/js/aos.js"></script>
  <scriptsrc="assets/js/main.js"></script>
</body>
</html>

Create a folder name it as profile
In Profile folder Create sub  folder name it as about
Create about.component.html
<divclass="section"id="about">
    <divclass="container">
        <divclass="card"data-aos="fade-up"data-aos-offset="10">
            <divclass="row">
                <divclass="col-lg-6 col-md-12">
                    <divclass="card-body">
                        <divclass="h4 mt-0 title">About Me</div>
                            <palign="justify">From a young age, I’ve always had a sense of motivation and passion driving me forward. Whether it’s exploring unique opportunities, learning additional skills, or meeting new people, I bring these values to every experience throughout my life on a personal and professional level.</p>
                            <p align="justify">Lover of innovation and everything related to generate new knowledge.Face problems with a smile and solve them as soon as possible. Very calculated about the time I spend and work I do.</p>
                            <p align="justify">To learn more about me, keep exploring my site or reach out directly.</p>
                    </div>
                </div>    
                <divclass="col-lg-6 col-md-12">       
                    <divclass="card-body">
                        <divclass="h4 mt-0 title">Basic Information</div>
                        <divclass="row">
                            <divclass="col-sm-4">
                                <strongclass="text-uppercase">Date of Birth:</strong>
                            </div>
                            <divclass="col-sm-8">Mar 18, 2000</div>
                        </div>
                        <divclass="row mt-4">
                            <divclass="col-sm-4">
                                <strongclass="text-uppercase">Email:</strong>
                            </div>
                            <divclass="col-sm-8">kannig18@gmail.com</div>
                        </div>
                        <divclass="row mt-4">
                            <divclass="col-sm-4">
                                <strongclass="text-uppercase">Mobile No:</strong>
                            </div>
                            <divclass="col-sm-8">8500288222</div>
                        </div>
                        <divclass="row mt-4">
                            <divclass="col-sm-4">
                                <strongclass="text-uppercase">Address:</strong>
                            </div>
                            <divclass="col-sm-8">#Paripally Street,HNO:6-2-109,Siddipet,502103</div>
                        </div>
                        <divclass="row mt-4">
                            <divclass="col-sm-4">
                                <strongclass="text-uppercase">Language:</strong>
                            </div>
                            <divclass="col-sm-8">Telugu,hindhi,English</div>
                        </div>
                     </div>
                </div>
            </div>
        </div>
    </div>
</div>

Create about.component.css
Create about.component.spec.ts
import{ async, ComponentFixture, TestBed } from'@angular/core/testing';

import{ AboutComponent } from'./about.component';

describe('AboutComponent', () => {
  letcomponent:AboutComponent;
  letfixture:ComponentFixture<AboutComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ AboutComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture=TestBed.createComponent(AboutComponent);
    component=fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});


Create about.components.ts
import{ Component, OnInit } from'@angular/core';

@Component({
  selector:'app-about',
  templateUrl:'./about.component.html',
  styleUrls: ['./about.component.scss']
})
exportclassAboutComponentimplementsOnInit {

  constructor() { }

  ngOnInit():void {
  }

}


In Profile folder Create sub  folder name it as content
Create contact.component.html
<divclass="section"id="contact">
    <divclass="cc-contact-information"style="background-image: url('assets/images/contact.jpg');">
      <divclass="container">
        <divclass="cc-contact">
          <divclass="row">
            <divclass="col-md-9">
              <divclass="card mb-0"data-aos="zoom-in">
                <divclass="h4 text-center title">Contact Me</div>
                <divclass="row">
                  <divclass="col-md-6">
                    <divclass="card-body">
                      <formname="form"(ngSubmit)="f.form.valid ; f.resetForm()"#f="ngForm"novalidate>
                        <divclass="p pb-3">
                          <strong>Feel free to contact me </strong>
                        </div>
                        <divclass="row mb-3">
                          <divclass="col">
                            <divclass="input-group">
                              <inputclass="form-control"type="text"name="name"#nameplaceholder="Name"
                                [(ngModel)]="model.name"#name="ngModel"
                                [ngClass]="{ 'is-invalid': f.submitted&&name.invalid }"required />
                            </div>
                          </div>
                        </div>
                        <divclass="row mb-3">
                          <divclass="col">
                            <divclass="input-container">
                              <inputclass="form-control"type="text"name="subject"#subjectplaceholder="Subject"
                                [(ngModel)]="model.subject"#subject="ngModel"
                                [ngClass]="{ 'is-invalid': f.submitted&&subject.invalid }"required />
                            </div>
                          </div>
                        </div>
                        <divclass="row mb-3">
                          <divclass="col">
                            <divclass="input-group">
                              <inputclass="form-control"type="text"name="email"  #emailplaceholder="E-mail"
                                [(ngModel)]="model.email"#email="ngModel"
                                [ngClass]="{ 'is-invalid': f.submitted&&email.invalid }"
                                pattern="^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$"required />
                            </div>
                          </div>
                        </div>
                        <divclass="row mb-3">
                          <divclass="col">
                            <divclass="form-group">
                              <textareaclass="form-control"name="message"#messageplaceholder="Your Message"
                                [(ngModel)]="model.message"#message="ngModel"
                                [ngClass]="{ 'is-invalid': f.submitted&&message.invalid }"required></textarea>
                            </div>
                          </div>
                        </div>
                        <divclass="row">
                          <divclass="col">
                            <buttonclass="btnbtn-primary"type="submit"(click)="onSubmit(name.value, subject.value, email.value, message.value)"> Send</button>
                          </div>
                        </div>
                      </form>
                    </div>
                  </div>
                  <divclass="col-md-6">
                    <divclass="card-body">
                        <pclass="mb-0">
                            <strong>Phone</strong>
                        </p>
                        <pclass="pb-2">+91 9347787755</p>
                        <pclass="mb-0">
                            <strong>Email</strong>
                        </p>
                        <p>gundetiradhika@gmail.com</p>
                    </div>
                </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <ng-snotifyclass="material"></ng-snotify>


Create contact.component.scss
Create contact.component.spec.ts
import{ async, ComponentFixture, TestBed } from'@angular/core/testing';

import{ ContactComponent } from'./contact.component';

describe('ContactComponent', () => {
  letcomponent:ContactComponent;
  letfixture:ComponentFixture<ContactComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ ContactComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture=TestBed.createComponent(ContactComponent);
    component=fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});


Create contact.component.ts
import{ Component, OnInit } from'@angular/core';
import{ HttpClient } from'@angular/common/http';
import{ HttpHeaders} from'@angular/common/http';
import{ ProfileService } from'../profile.service';
import{ SnotifyService } from'ng-snotify';
import{ environment } from'../../../environments/environment';

@Component({
  selector:'app-contact',
  templateUrl:'./contact.component.html',
  styleUrls: ['./contact.component.scss']
})
  exportclassContactComponentimplementsOnInit {
    model:any= {};
  
    constructor(
      privatehttp:HttpClient
    ){}
  
    ngOnInit() {
       }
       onSubmit(name, subject, email, message) {
          constheaders=newHttpHeaders({ 'Content-Type':'application/json' });
          this.http.post('https://formspree.io/f/mwkwpzve',
            { name:name, subject:subject, replyto:email, message:message },
            { 'headers':headers }).subscribe(
              response=> {
                console.log(response);
              }
            );
        }  
}



In Profile folder Create sub  folder name it as education
Create education.component.html
<divclass="section"id="education">
    <divclass="container cc-education">
        <divclass="h4 text-center mb-4 title">Education</div>
            <divclass="card">
                <divclass="row">
                    <divclass="col-md-3 bg-primary"data-aos="fade-right"data-aos-offset="50"data-aos-duration="500">
                        <divclass="card-body cc-education-header">
                            <p>2017-2021</p>
                            </div>
                    <divclass="col-md-9"data-aos="fade-left"data-aos-offset="50"data-aos-duration="500">
                        <divclass="card-body">
                            <divclass="h4">Bachelor of Engineering</div>
                                <h4class="category">Indur  College Of Engineering and Technology</h4>
                                <ul>
                                    <li> Indur College Of Engineering and Technology <b>ranks 2nd</b> in Telangana</li>
                                        <li>Completed B-tech in Computer Science and Engineering with <b>68% </b>.</li>
                                </ul>
                        </div>
                    </div>
                </div>
            </div>
            <divclass="card">
                <divclass="row">
                    <divclass="col-md-3 bg-primary"data-aos="fade-right"data-aos-offset="50"data-aos-duration="500">
                        <divclass="card-body cc-education-header">
                            <p>2015-2017</p>
                        <divclass="h5">Secondary education</div>
                        </div>    
                    </div>
                    <divclass="col-md-9"data-aos="fade-left"data-aos-offset="50"data-aos-duration="500">
                        <divclass="card-body">
                            <divclass="h4">Inter MPC</div>
                            <h4class="category">Gurukrupa jr College</h4>
                            <ul>
                                    <li>Completed secondary education with <b>79%</b>aggregate.</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <divclass="card">
                <divclass="row">
                    <divclass="col-md-3 bg-primary"data-aos="fade-right"data-aos-offset="50"data-aos-duration="500">
                        <divclass="card-body cc-education-header">
                            <p>2015</p>
                        <divclass="h5">Primary education</div>
                        </div>    
                    </div>
                    <divclass="col-md-9"data-aos="fade-left"data-aos-offset="50"data-aos-duration="500">
                        <divclass="card-body">
                            <divclass="h5">Eng Medium</div>
                                <h4class="category">Raos My Techno School</h4>
                                <ul>
                                        <li>Completed with <b>90% </b>aggregate.</li>
                                </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>                                            
</div>     

Create education.component.scss
Create education.component.spec.ts
import{ async, ComponentFixture, TestBed } from'@angular/core/testing';

import{ EducationComponent } from'./education.component';

describe('EducationComponent', () => {
  letcomponent:EducationComponent;
  letfixture:ComponentFixture<EducationComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ EducationComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture=TestBed.createComponent(EducationComponent);
    component=fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});


Create education.component.ts
import{ Component, OnInit } from'@angular/core';

@Component({
  selector:'app-education',
  templateUrl:'./education.component.html',
  styleUrls: ['./education.component.scss']
})
exportclassEducationComponentimplementsOnInit {

  constructor() { }

  ngOnInit():void {
  }

}



In Profile folder Create sub  folder name it as footer
Create footer.component.html
<footerclass="footer">
    <divclass="container text-center">
        <aclass="cc-facebookbtnbtn-link"href="https://www.facebook.com/Mr.YuvaKeratam/"target="_blank">
            <iclass="fa fa-facebook fa-2x "aria-hidden="true"></i>
        </a>
        <aclass="cc-instagrambtnbtn-link"href="https://www.instagram.com/mr.yuvakeratam/"target="_blank">
            <iclass="fa fa-instagram fa-2x "aria-hidden="true"></i>
        </a>
        <aclass="cc-githubbtnbtn-link "href="https://https://github.com/NidamanuriRahulKumar/"target="_blank">
            <iclass="fa fa-github fa-2x "aria-hidden="true"></i>
        </a>
    </div>
    <divclass="text-center text-muted">
        <p>&copy; All rights reserved.</p>
    </div>
</footer>

Create footer.component.scss
Create footer.component.spec.ts
import{ async, ComponentFixture, TestBed } from'@angular/core/testing';

import{ FooterComponent } from'./footer.component';

describe('FooterComponent', () => {
  letcomponent:FooterComponent;
  letfixture:ComponentFixture<FooterComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ FooterComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture=TestBed.createComponent(FooterComponent);
    component=fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});


Create footer.component.ts
import{ Component, OnInit } from'@angular/core';

@Component({
  selector:'app-footer',
  templateUrl:'./footer.component.html',
  styleUrls: ['./footer.component.scss']
})
exportclassFooterComponentimplementsOnInit {

  constructor() { }

  ngOnInit():void {
  }

}


In Profile folder Create sub  folder name it as header
Create header.component.html
<header>
    <divclass = "profile-page sidebar-collapse">
        <navclass="navbar navbar-expand-lg fixed-top navbar-transparent bg-primary"color-on-scroll="400">
            <divclass="container">
            <divclass="navbar-translate">
                <aclass="navbar-brand"href="#"rel="tooltip">Mr.YuvaKeratam</a>
                <buttonclass="navbar-toggler navbar-toggler"type="button"data-toggle="collapse"data-target="#navigation"aria-controls="navigation"aria-expanded="false"aria-label="Toggle navigation">
                    <spanclass="navbar-toggler-bar bar1"></span>
                    <spanclass="navbar-toggler-bar bar2"></span>
                    <spanclass="navbar-toggler-bar bar3"></span>
                </button>
            </div>
            <divclass="collapse navbar-collapse justify-content-end"id="navigation">
                <ulclass="navbar-nav">
                  <liclass="nav-item">
                    <aclass="nav-link smooth-scroll"href="#about">About</a>
                  </li>
                    <liclass="nav-item">
                    <aclass="nav-link smooth-scroll"href="#skill">Skills</a>
                  </li>
                  <liclass="nav-item">
                    <aclass="nav-link smooth-scroll"href="#education">Education</a>
                  </li>
    
                  <liclass="nav-item">
                      <aclass="nav-link smooth-scroll"href="#reference">Reference</a>
                    </li>
    
                  <liclass="nav-item">
                    <aclass="nav-link smooth-scroll"href="#contact">Contact</a>
                  </li>
                </ul>
              </div>
            </div>
        </nav>
    </div>
</header>


Create header.component.scss
Create header.component.spec.ts
import{ async, ComponentFixture, TestBed } from'@angular/core/testing';

import{ HeaderComponent } from'./header.component';

describe('HeaderComponent', () => {
  letcomponent:HeaderComponent;
  letfixture:ComponentFixture<HeaderComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ HeaderComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture=TestBed.createComponent(HeaderComponent);
    component=fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});


Create header.component.ts
import{ Component, OnInit } from'@angular/core';

@Component({
  selector:'app-header',
  templateUrl:'./header.component.html',
  styleUrls: ['./header.component.scss']
})
exportclassHeaderComponentimplementsOnInit {

  constructor() { }

  ngOnInit():void {
  }

}




In Profile folder Create sub  folder name it as intro
Create intro.component.html
<divclass="profile-page">
    <divclass="wrapper">
        <divclass="page-header page-header-small"filter-color="orange">
            <divclass="page-header-image"data-parallax="true"style="background-image: url('assets/images/introduction.jpg');">
            </div>
        <divclass="container">
            <divclass="content-center">
                <divclass="profile-image">
                    <ahref="#">
                        <imgsrc="assets/images/profile.jpg"alt="Image" />
                    </a>
                </div>
                <divclass="h2 title">Pasikanti Akanksha</div>
                <pclass="category text-white">Java Full STack Developer</p>
                <aclass="btnbtn-primary smooth-scroll mr-2"href="#contact"data-aos="zoom-in"data-aos-anchor="data-aos-anchor">Hire Me</a>
                <aclass="btn btn-primary"href="https://docs.google.com/document/d/1HSVZPYX0c_d6fkFsfNOAAnb3--LGD2Lo/edit?usp=sharing&ouid=105500183977979454287&rtpof=true&sd=true"target="_blank"data-aos="zoom-in"data-aos-anchor="data-aos-anchor">Download CV</a>
            </div>
        </div>
        <divclass="section">
            <divclass="container">
                <divclass="button-container">
                    <aclass="btnbtn-default btn-round btn-lgbtn-icon"href="https://www.facebook.com/Mr.YuvaKeratam/"target="_blank"rel="tooltip"title="Follow me on Facebook">
                        <iclass="fa fa-facebook"></i>
                    </a>
                    <aclass="btnbtn-default btn-round btn-lgbtn-icon"href="https://www.instagram.com/mr.yuvakeratam/"target="_blank"rel="tooltip"title="Follow me on Linkedin">
                        <iclass="fa fa-linkedin"></i>
                    </a>
                    <aclass="btnbtn-default btn-round btn-lgbtn-icon"href="https://github.com/NidamanuriRahulKumar/"target="_blank"rel="tooltip"title="Follow me on Github">
                        <iclass="fa fa-github"></i>
                    </a>
                </div>
            </div>
        </div>
        </div>
    </div>
</div>

Create intro.component.scss
Create intro.component.spec.ts
import{ async, ComponentFixture, TestBed } from'@angular/core/testing';

import{ IntroComponent } from'./intro.component';

describe('IntroComponent', () => {
  letcomponent:IntroComponent;
  letfixture:ComponentFixture<IntroComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ IntroComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture=TestBed.createComponent(IntroComponent);
    component=fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});





Create intro.component.ts
import{ Component, OnInit } from'@angular/core';

@Component({
  selector:'app-intro',
  templateUrl:'./intro.component.html',
  styleUrls: ['./intro.component.scss']
})
exportclassIntroComponentimplementsOnInit {

  constructor() { }

  ngOnInit():void {
  }

}


In Profile folder Create sub  folder name it as skills
Create skills.component.html
<divclass="section"id="skill">
    <divclass="container">
      <divclass="h4 text-center mb-4 title">Skills</div>
      <divclass="card"data-aos="fade-up"data-aos-anchor-placement="top-bottom">
        <divclass="card-body">
          <divclass="row">
            <divclass="col-md-6">
              <divclass="progress-container progress-primary">
                <spanclass="progress-badge">Java</span>
                <divclass="progress">
                  <divclass="progress-bar progress-bar-primary"data-aos="progress-full"data-aos-offset="10"
                    data-aos-duration="2000"role="progressbar"aria-valuenow="60"aria-valuemin="0"aria-valuemax="100"
                    style="width: 85%;"></div>
                  <spanclass="progress-value">85%</span>
                </div>
              </div>
            </div>
          <divclass="row">
            <divclass="col-md-6">
              <divclass="progress-container progress-primary">
                <spanclass="progress-badge">Spring Framework</span>
                <divclass="progress">
                  <divclass="progress-bar progress-bar-primary"data-aos="progress-full"data-aos-offset="10"
                    data-aos-duration="2000"role="progressbar"aria-valuenow="60"aria-valuemin="0"aria-valuemax="100"
                    style="width: 70%;"></div>
                  <spanclass="progress-value">70%</span>
                </div>
              </div>
            </div>
            <divclass="col-md-6">
              <divclass="progress-container progress-primary">
                <spanclass="progress-badge">Angular8</span>
                <divclass="progress">
                  <divclass="progress-bar progress-bar-striped progress-bar-animated"data-aos="progress-full"data-aos-offset="10"
                    data-aos-duration="2000"role="progressbar"aria-valuenow="60"aria-valuemin="0"aria-valuemax="100"
                    style="width: 60%;"></div>
                  <spanclass="progress-value">60%</span>
                </div>
              </div>
            </div>
          </div>
          <divclass="row">
            <divclass="col-md-6">
              <divclass="progress-container progress-primary">
                <spanclass="progress-badge">RDBMS</span>
                <divclass="progress">
                  <divclass="progress-bar progress-bar-primary"data-aos="progress-full"data-aos-offset="10"
                    data-aos-duration="2000"role="progressbar"aria-valuenow="60"aria-valuemin="0"aria-valuemax="100"
                    style="width: 75%;"></div>
                  <spanclass="progress-value">75%</span>
                </div>
              </div>
            </div>
            <divclass="col-md-6">
              <divclass="progress-container progress-primary">
                <spanclass="progress-badge">HTML,CSS,JS</span>
                <divclass="progress">
                  <divclass="progress-bar progress-bar-primary"data-aos="progress-full"data-aos-offset="10"
                    data-aos-duration="2000"role="progressbar"aria-valuenow="60"aria-valuemin="0"aria-valuemax="100"
                    style="width: 70%;"></div>
                  <spanclass="progress-value">70%</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

Create skills.component.scss
Create skills.component.spec.ts
import{ async, ComponentFixture, TestBed } from'@angular/core/testing';

import{ SkillsComponent } from'./skills.component';

describe('SkillsComponent', () => {
  letcomponent:SkillsComponent;
  letfixture:ComponentFixture<SkillsComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ SkillsComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture=TestBed.createComponent(SkillsComponent);
    component=fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});

Create skills.component.ts
import{ Component, OnInit } from'@angular/core';

@Component({
  selector:'app-skills',
  templateUrl:'./skills.component.html',
  styleUrls: ['./skills.component.scss']
})
exportclassSkillsComponentimplementsOnInit {

  constructor() { }

  ngOnInit():void {
  }

}


In Profile create profile.component.html
<app-header></app-header>
<divclass ="page-content">
    <app-intro></app-intro>
    <app-about></app-about>
    <app-skills></app-skills>
    <app-education></app-education>
    <app-contact></app-contact>
</div>
<app-footer></app-footer>
<ngx-spinnerbdColor="rgba(255,255,255,1)"size="medium"color="#033d5b"type="ball-spin-clockwise"></ngx-spinner>


In Profile create profile.component.scss
In Profile create profile.component.spec.ts
import{ async, ComponentFixture, TestBed } from'@angular/core/testing';

import{ ProfileComponent } from'./profile.component';

describe('ProfileComponent', () => {
  letcomponent:ProfileComponent;
  letfixture:ComponentFixture<ProfileComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ ProfileComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture=TestBed.createComponent(ProfileComponent);
    component=fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});


In Profile create profile.component.ts
import{ Component, OnInit } from'@angular/core';
import{ NgxSpinnerService } from'ngx-spinner';

@Component({
  selector:'app-profile',
  templateUrl:'./profile.component.html',
  styleUrls: ['./profile.component.scss']
})
exportclassProfileComponentimplementsOnInit {

  constructor(
    privatespinner:NgxSpinnerService
  ) { }
  ngOnInit() {
    this.spinner.show();
    setTimeout(() => {
        this.spinner.hide();
    }, 2000);
  }

}
In Profile create profile.module.ts
import{ NgModule } from'@angular/core';
import{ CommonModule } from'@angular/common';
import{ SnotifyModule, SnotifyService, ToastDefaults } from'ng-snotify';
import{ ProfileComponent } from'./profile.component';
import{ HeaderComponent } from'./header/header.component';
import{ FooterComponent } from'./footer/footer.component';
import{ IntroComponent } from'./intro/intro.component';
import{ AboutComponent } from'./about/about.component';
import{ NgxSpinnerModule } from'ngx-spinner';
import{ ContactComponent } from'./contact/contact.component';
import{ EducationComponent } from'./education/education.component';
import{ SkillsComponent } from'./skills/skills.component';
import {FormsModule,ReactiveFormsModule} from'@angular/forms';

@NgModule({
  imports: [
    CommonModule,
    FormsModule,
    SnotifyModule,
    FormsModule,
    ReactiveFormsModule,
    NgxSpinnerModule
  ],
  declarations: [
    ProfileComponent,
    HeaderComponent,
    FooterComponent,
    AboutComponent,
    IntroComponent,
    ContactComponent,
    EducationComponent,
    SkillsComponent,
  ],
  providers: [
    { provide:'SnotifyToastConfig', useValue:ToastDefaults},
    SnotifyService,
  ]
})
exportclassProfileModule{ }


In profile Create profile.service.ts
import{ Injectable } from'@angular/core';
import{ Observable } from'rxjs';
import{ HttpClient } from'@angular/common/http';
import{ environment } from'../../environments/environment';

@Injectable({
    providedIn:'root'
  })
  exportclassProfileService {
    baseUrl=environment.baseUrl;

  constructor(
    privatehttp:HttpClient
  ) { }

  contactus(data:any):Observable<any> {
    returnthis.http.post('http://localhost:4200/contact',data);
  }
  }

In profile open app.component.html
<router-outlet></router-outlet>

In profile open app.module.ts
import{ BrowserModule } from'@angular/platform-browser';
import{ NgModule } from'@angular/core';

import{ AppComponent } from'./app.component';
import{ RouterModule, Routes, ExtraOptions } from'@angular/router';
import{ ProfileComponent } from'./profile/profile.component';
import{ ProfileModule } from'./profile/profile.module';
import{ HttpClientModule } from'@angular/common/http';
import {FormsModule,ReactiveFormsModule} from'@angular/forms';

constroutes:Routes= [
  {
    path:'',
    component:ProfileComponent
  }
];

constconfig:ExtraOptions= {
  useHash:true,
};

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    FormsModule,
    ReactiveFormsModule,
    RouterModule.forRoot(routes, config),
    ProfileModule,
    HttpClientModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
exportclassAppModule{ }

In profile open app.component.spec.ts
import{ TestBed, async } from'@angular/core/testing';
import{ RouterTestingModule } from'@angular/router/testing';
import{ AppComponent } from'./app.component';

describe('AppComponent', () => {
  beforeEach(async(() => {
    TestBed.configureTestingModule({
      imports: [
        RouterTestingModule
      ],
      declarations: [
        AppComponent
      ],
    }).compileComponents();
  }));

  it('should create the app', () => {
    constfixture=TestBed.createComponent(AppComponent);
    constapp=fixture.componentInstance;
    expect(app).toBeTruthy();
  });

  it(`should have as title 'Personal-Portfolio-Angular'`, () => {
    constfixture=TestBed.createComponent(AppComponent);
    constapp=fixture.componentInstance;
    expect(app.title).toEqual('Personal-Portfolio-Angular');
  });

  it('should render title', () => {
    constfixture=TestBed.createComponent(AppComponent);
    fixture.detectChanges();
    constcompiled=fixture.nativeElement;
    expect(compiled.querySelector('.content span').textContent).toContain('Personal-Portfolio-Angular app is running!');
  });
});


Open JS folder create file main.js
// Add your javascript here
// Don't forget to add it into respective layouts where this js file is needed

$(document).ready(function() {
  AOS.init( {
    // uncomment below for on-scroll animations to played only once
    // once: true  
  }); // initialize animate on scroll library
});

// Smooth scroll for links with hashes
$('a.smooth-scroll')
.click(function(event) {
  // On-page links
  if (
    location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') 
    &&
    location.hostname == this.hostname
  ) {
    // Figure out element to scroll to
    vartarget = $(this.hash);
    target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
    // Does a scroll target exist?
    if (target.length) {
      // Only prevent default if animation is actually gonna happen
      event.preventDefault();
      $('html, body').animate({
        scrollTop: target.offset().top
      }, 1000, function() {
        // Callback after animation
        // Must change focus!
        var$target = $(target);
        $target.focus();
        if ($target.is(":focus")) { // Checking if the target was focused
          returnfalse;
        } else {
          $target.attr('tabindex','-1'); // Adding tabindex for elements not focusable
          $target.focus(); // Set focus again
        };
      });
    }
  }
});









                   








